apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
Properties propertiesBintray = new Properties()
propertiesBintray.load(file('bintray.properties').newDataInputStream())
def siteUrl = propertiesBintray.getProperty("siteUrl")   // 项目的主页
def gitUrl = propertiesBintray.getProperty("gitUrl")   // Git仓库的url
def libVersion = propertiesBintray.getProperty("version")
version = libVersion //发布版本号
group = propertiesBintray.getProperty("group") //最终引用形式，如compile 'com.piano.demolib:1.0.0'，其中demolib在后面配置
def libName = propertiesBintray.getProperty("name")
def libDesc = propertiesBintray.getProperty("description")
def bintrayId = propertiesBintray.getProperty("bintrayId")
def bintrayName = propertiesBintray.getProperty("bintrayName")
def bintrayEmail = propertiesBintray.getProperty("bintrayEmail")

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    pkg {
        repo = propertiesBintray.getProperty("repo")//自己创建的仓库名字
        name = libName//上传到JCenter的名字,最终引用的名字 compile 'com.piano.demolib:1.0.0'
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ['Apache-2.0']//不能随便写，只能是仓库创建时选择的license type
        userOrg = propertiesBintray.getProperty("organization") //自己创建的organization名称，一定要全是小写字母，即使当时创建的名称含有大写，这里全部转换为小写，否则404
        publish = propertiesBintray.getProperty("isPublic") // 是否是公开项目，公开别人可以引用
        version {
            name = libVersion
            desc = libDesc//描述，自己定义
            released  = new Date()
            vcsTag = propertiesBintray.getProperty("vcsTag")
            attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin']
        }
    }
    configurations = ['archives']
}

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                // Add your description here
                name libName
                description libDesc
                url siteUrl
                // Set your license
                licenses {
                    license {
                        name 'Apache-2.0' //和之前自己定义的协议一致
                        url 'https://github.com/zhangwei911/Paging/blob/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id bintrayId        //填写bintray或者github的用户名
                        name bintrayName         //姓名
                        email bintrayEmail//邮箱
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

ext.packageTask = {
    task sourcesJar(type: Jar) {
        from android.sourceSets.main.java.srcDirs
        classifier = 'sources'
    }
    task javadoc(type: Javadoc) {
        failOnError false //必须添加以免出错
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }
    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }
    artifacts {
        archives javadocJar
        archives sourcesJar
    }
    javadoc {
        options {
            //如果你的项目里面有中文注释的话，必须将格式设置为UTF-8，不然会出现乱码
            encoding "UTF-8"
            charSet 'UTF-8'
            author true
            version true
            links "http://docs.oracle.com/javase/7/docs/api"
        }
    }
}
